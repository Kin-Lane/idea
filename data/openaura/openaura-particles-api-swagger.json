{"resourcePath":"/v1/particles","listingPath":"/v1/api-docs/particles","description":"Particles API","apis":[{"path":"/v1/particles/artists/{id}","description":"","secured":false,"operations":[{"httpMethod":"GET","responseClass":"List[string]","summary":"Get particle collection by artist id","notes":"id_type is used to indicate the type of ID used to find results.\n This query recognizes the following id_types:\n <ul>\n <li><strong>oa:anchor_id</strong> - A 12-byte hexadecimal id, unique to each OpenAura Anchor.</li>\n <li><strong>oa:artist_id</strong> - An integer id, unique to each Artist.</li>\n <li><strong>musicbrainz:gid</strong> - A Musicbrainz global identifier for an artist.</li></ul>","deprecated":false,"nickname":"auraByArtistId","parameters":[{"name":"id_type","description":"oa:anchor_id, oa:artist_id, or musicbrainz:gid. Defaults to OpenAura Anchor ID","defaultValue":"oa:artist_id","required":false,"paramType":"query","allowMultiple":false,"dataType":"string"},{"name":"offset","description":"Offset from beginning of aura","required":false,"paramType":"query","allowMultiple":false,"dataType":"int"},{"name":"limit","description":"Maximum number of particles returned","required":false,"paramType":"query","allowMultiple":false,"dataType":"int"},{"name":"sort","description":"Sort order for particle list. Defaults to 'date' (date of post descending)","defaultValue":"date","required":false,"paramType":"query","allowMultiple":false,"dataType":"string"},{"name":"id","description":"OpenAura anchor id for artist","defaultValue":"47","required":true,"paramType":"path","allowMultiple":false,"dataType":"string"}],"errorResponses":[]}]},{"path":"/v1/particles/particle/{id}","description":"","secured":false,"operations":[{"httpMethod":"GET","responseClass":"string","summary":"Get particle collection of a single particle by particle id","notes":"id_type is used to indicate the type of ID used to find a particle.\n This query recognizes the following id_types:\n <ul>\n <li><strong>oa:particle_id</strong> -  A 12-byte hexadecimal id, unique to each OpenAura particle.</li></ul>","deprecated":false,"nickname":"particleById","parameters":[{"name":"id_type","description":"oa:particle_id. Defaults to OpenAura Particle ID","defaultValue":"oa:particle_id","required":false,"paramType":"query","allowMultiple":false,"dataType":"string"},{"name":"id","description":"Object id of particle","required":true,"paramType":"path","allowMultiple":false,"dataType":"string"}],"errorResponses":[]}]},{"path":"/v1/particles/sources/{id}","description":"","secured":false,"operations":[{"httpMethod":"GET","responseClass":"List[string]","summary":"Get particle collection by source id","notes":"id_type is used to indicate the type of ID used to find a Source.\n This query recognizes the following id_types:\n <ul>\n <li><strong>oa:source_id</strong> -  An integer id, unique to each OpenAura Source.</li></ul>","deprecated":false,"nickname":"auraBySourceId","parameters":[{"name":"id_type","description":"oa:source_id","defaultValue":"oa:source_id","required":false,"paramType":"query","allowMultiple":false,"dataType":"string"},{"name":"offset","description":"Offset from beginning of particle list","required":false,"paramType":"query","allowMultiple":false,"dataType":"int"},{"name":"limit","description":"Maximum number of particles returned","required":false,"paramType":"query","allowMultiple":false,"dataType":"int"},{"name":"id","description":"OpenAura source id","defaultValue":"2459","required":true,"paramType":"path","allowMultiple":false,"dataType":"string"}],"errorResponses":[]}]},{"path":"/v1/particles/version","description":"","secured":false,"operations":[{"httpMethod":"GET","responseClass":"List[string]","summary":"Returns Particles API version info","deprecated":false,"nickname":"auraVersion","parameters":[],"errorResponses":[]}]}],"models":{},"basePath":"http://api.openaura.com","swaggerVersion":"1.1","apiVersion":"1"}
