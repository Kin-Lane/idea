{"apiVersion":"1","swaggerVersion":"1.0","resourcePath":"/api/v1/mission","produces":["application/json"],"consumes":["application/json"],"protocols":["http"],"apis":[{"path":"/api/v1/mission/","operations":[{"method":"GET","summary":"Show all missions","position":0,"notes":"Shows all the missions. You can search it too.","deprecated":false,"nickname":"get","parameters":[{"name":"live","description":"Live flights only","required":false,"paramType":"query","type":"boolean"},{"name":"completed","description":"Completed flights only","required":false,"paramType":"query","type":"boolean"},{"name":"within","description":"Flights within a specified GeoJSON polygon","required":false,"paramType":"query","type":"string"},{"name":"page_offset","description":"If paging, the record # to start with (use 0 at start)","required":false,"paramType":"query","type":"integer","format":"int32"},{"name":"page_size","description":"If paging, the # of records in the page","required":false,"paramType":"query","type":"integer","format":"int32"},{"name":"order_by","description":"To get sorted response, the field name to sort on","required":false,"paramType":"query","type":"string"},{"name":"order_dir","description":"If sorting, the optional direction.  either asc or desc","required":false,"paramType":"query","type":"string"}],"type":"array","items":{"$ref":"MissionJson"}},{"method":"PUT","summary":"Create a new object with a dynamically constructed ID","position":0,"notes":"","deprecated":false,"nickname":"createDynamically","parameters":[{"name":"body","required":true,"paramType":"body","type":"MissionJson"}],"type":"string"}]},{"path":"/api/v1/mission/live","operations":[{"method":"GET","summary":"An atmosphere endpoint containing an endless stream of mission update messages","position":0,"notes":"","deprecated":false,"nickname":"live","parameters":[],"type":"AtmosphereClient"},{"method":"POST","summary":"An atmosphere endpoint containing an endless stream of mission update messages","position":0,"notes":"","deprecated":false,"nickname":"live","parameters":[],"type":"AtmosphereClient"}]},{"path":"/api/v1/mission/staticMap","operations":[{"method":"GET","summary":"Get recent flights suitable for a global map view","position":0,"notes":"","deprecated":false,"nickname":"staticMap","parameters":[],"type":"array","items":{"$ref":"MissionJson"}}]},{"path":"/api/v1/mission/upload/{vehicleUUID}","operations":[{"method":"POST","summary":"Add a new mission (as a tlog, bog or log)","position":0,"notes":"This endpoint is designed to facilitate easy log file uploading from GCS applications.  It requires no oauth or\n      other authentication (but you will need to use your application's api_key).  You should pass in the user's login and password\n      as query parameters.<p>\n\n      You'll also need to pick a UUID to represent the vehicle (if your user interface allows the user to specify\n      particular models you should associate the UUID with the model - alternatively you can open a WebView and use droneshare to let the\n      user pick a model).  If the vehicle has not previously been seen it will be created.<p>\n\n      If you are taking advantage of the autoCreate feature, you should specify a user email address and name (so we can send them\n      password reset emails if they forget their password).<p>\n\n      Both multi-part file POSTs and simple posts of log files as the entire request body are supported.  In the latter case the content\n      type must be set appropriately.<p>\n      ","deprecated":false,"nickname":"uploadForVehicle","parameters":[{"name":null,"description":"log file as a standard html form upload POST","required":true,"paramType":"body","type":"file"},{"name":"vehicleUUID","description":"UUID of vehicle to be have mission added (the client should pick a stable UUID)","required":true,"paramType":"path","type":"string"},{"name":"login","description":"User login (used if not already logged-in via cookie)","required":true,"paramType":"query","type":"string"},{"name":"password","description":"User password (used if not already logged-in via cookie)","required":true,"paramType":"query","type":"string"},{"name":"email","description":"Email address (optional, used if user creation is required)","required":false,"paramType":"query","type":"string"},{"name":"fullName","description":"User full name (optional, used if user creation is required)","required":false,"paramType":"query","type":"string"},{"name":"autoCreate","description":"If true a new user account will be created if required","required":true,"paramType":"query","type":"boolean"},{"name":"privacy","description":"The privacy setting for this flight (DEFAULT, PRIVATE, PUBLIC, SHARED, RESEARCHER)","required":false,"paramType":"query","type":"string"}],"responseMessages":[{"code":200,"message":"Success.  Payload will be a JSON array of mission objects.\n        \t\tYou probably want to show the user the viewURL for each file, but the other mission fields might also be interesting."}],"type":"array","items":{"$ref":"MissionJson"}}]},{"path":"/api/v1/mission/{id}","operations":[{"method":"GET","summary":"Find by id","position":0,"notes":"","deprecated":false,"nickname":"findById","parameters":[{"name":"id","description":"Id of mission that needs to be fetched","required":true,"paramType":"path","type":"string"}],"type":"MissionJson"},{"method":"PUT","summary":"Update by id","position":0,"notes":"","deprecated":false,"nickname":"uodateById","parameters":[{"name":"body","required":true,"paramType":"body","type":"MissionJson"},{"name":"id","description":"Id of mission that needs to be updated","required":true,"paramType":"path","type":"string"}],"type":"string"},{"method":"DELETE","summary":"Delete by id","position":0,"notes":"","deprecated":false,"nickname":"deleteById","parameters":[{"name":"id","description":"Id of mission that needs to be deleted","required":true,"paramType":"path","type":"string"}],"type":"string"},{"method":"POST","summary":"Create by id","position":0,"notes":"","deprecated":false,"nickname":"createById","parameters":[{"name":"body","required":true,"paramType":"body","type":"MissionJson"},{"name":"id","description":"Id of mission that needs to be created","required":true,"paramType":"path","type":"string"}],"type":"string"}]},{"path":"/api/v1/mission/{id}/analysis.json","operations":[{"method":"GET","summary":"Get the analysis.json for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getAnalysis.json","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"JObject"}]},{"path":"/api/v1/mission/{id}/dseries","operations":[{"method":"GET","summary":"Get the dseries for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getDseries","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"array","items":{"$ref":"JObject"}}]},{"path":"/api/v1/mission/{id}/messages.geo.json","operations":[{"method":"GET","summary":"Get the messages.geo.json for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getMessages.geo.json","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"JObject"}]},{"path":"/api/v1/mission/{id}/messages.gmaps.kmz","operations":[{"method":"GET","summary":"Get the messages.gmaps.kmz for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getMessages.gmaps.kmz","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"array","items":{"type":"string","format":"byte"}}]},{"path":"/api/v1/mission/{id}/messages.json","operations":[{"method":"GET","summary":"Get the messages.json for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getMessages.json","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"MessageHeader"}]},{"path":"/api/v1/mission/{id}/messages.kml","operations":[{"method":"GET","summary":"Get the messages.kml for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getMessages.kml","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"array","items":{"type":"string","format":"byte"}}]},{"path":"/api/v1/mission/{id}/messages.kmz","operations":[{"method":"GET","summary":"Get the messages.kmz for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getMessages.kmz","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"array","items":{"type":"string","format":"byte"}}]},{"path":"/api/v1/mission/{id}/messages.tlog","operations":[{"method":"GET","summary":"Get the messages.tlog for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getMessages.tlog","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"ActionResult"}]},{"path":"/api/v1/mission/{id}/openTicket","operations":[{"method":"POST","summary":"Set the openTicket on specified mission","position":0,"notes":"","deprecated":false,"nickname":"addOpenTicket","parameters":[{"name":"id","description":"Id of mission to be appended","required":true,"paramType":"path","type":"string"},{"name":"openTicket","description":"New value for the openTicket","required":true,"paramType":"body","type":"OpenTicketJSON"}],"type":"string"}]},{"path":"/api/v1/mission/{id}/parameters.complete","operations":[{"method":"GET","summary":"Get the parameters.complete for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getParameters.complete","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"string"}]},{"path":"/api/v1/mission/{id}/parameters.json","operations":[{"method":"GET","summary":"Get the parameters.json for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getParameters.json","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"array","items":{"$ref":"ParameterJson"}}]},{"path":"/api/v1/mission/{id}/parameters.share","operations":[{"method":"GET","summary":"Get the parameters.share for the specified mission","position":0,"notes":"","deprecated":false,"nickname":"getParameters.share","parameters":[{"name":"id","description":"Id of mission to be read","required":true,"paramType":"path","type":"string"}],"type":"string"}]},{"path":"/api/v1/mission/{id}/{param}","operations":[{"method":"GET","summary":"Get a parameter from an object","position":0,"notes":"","deprecated":false,"nickname":"getParam","parameters":[{"name":"id","description":"Id of mission that needs to be fetched","required":true,"paramType":"path","type":"string"},{"name":"param","description":"The parameter to read from the object","required":true,"paramType":"path","type":"string"}],"type":"JValue"}]}],"models":{"EnumVal":{"id":"EnumVal","name":"EnumVal","qualifiedType":"com.geeksville.dapi.AccessCode$EnumVal","required":[],"properties":{}},"MissionJson":{"id":"MissionJson","name":"MissionJson","qualifiedType":"com.geeksville.dapi.model.MissionJson","required":["id","isLive"],"properties":{"id":{"position":0,"type":"integer","format":"int64"},"notes":{"position":0,"type":"string"},"viewPrivacy":{"position":0,"$ref":"EnumVal"},"vehicleId":{"position":0,"type":"integer","format":"int64"},"maxAlt":{"position":0,"type":"number","format":"double"},"maxGroundspeed":{"position":0,"type":"number","format":"double"},"maxAirspeed":{"position":0,"type":"number","format":"double"},"maxG":{"position":0,"type":"number","format":"double"},"flightDuration":{"position":0,"type":"number","format":"double"},"latitude":{"position":0,"type":"number","format":"double"},"longitude":{"position":0,"type":"number","format":"double"},"softwareVersion":{"position":0,"type":"string"},"softwareGit":{"position":0,"type":"string"},"createdOn":{"position":0,"type":"string","format":"date-time"},"updatedOn":{"position":0,"type":"string","format":"date-time"},"summaryText":{"position":0,"type":"string"},"mapThumbnailURL":{"position":0,"type":"string"},"viewURL":{"position":0,"type":"string"},"vehicleText":{"position":0,"type":"string"},"userName":{"position":0,"type":"string"},"userAvatarImage":{"position":0,"type":"string"},"isLive":{"position":2,"type":"boolean"}}},"ActionResult":{"id":"ActionResult","name":"ActionResult","qualifiedType":"org.scalatra.ActionResult","required":["status","body","headers"],"properties":{"status":{"position":0,"$ref":"ResponseStatus"},"body":{"position":1,"$ref":"Object"},"headers":{"position":2,"type":"array","items":{"type":"string"}}}},"ResponseStatus":{"id":"ResponseStatus","name":"ResponseStatus","qualifiedType":"org.scalatra.ResponseStatus","required":["code","message"],"properties":{"code":{"position":0,"type":"integer","format":"int32"},"message":{"position":1,"type":"string"}}},"MessageHeader":{"id":"MessageHeader","name":"MessageHeader","qualifiedType":"com.geeksville.dapi.MessageHeader","required":["modelType","messages"],"properties":{"modelType":{"position":0,"type":"string"},"messages":{"position":1,"type":"array","items":{"$ref":"MessageJson"}}}},"MessageJson":{"id":"MessageJson","name":"MessageJson","qualifiedType":"com.geeksville.dapi.MessageJson","required":["t","typ","fld"],"properties":{"t":{"position":0,"type":"integer","format":"int64"},"typ":{"position":1,"type":"string"},"fld":{"position":2,"type":"array","items":{"type":"string"}}}},"OpenTicketJSON":{"id":"OpenTicketJSON","name":"OpenTicketJSON","qualifiedType":"com.geeksville.dapi.OpenTicketJSON","required":["extraInfo"],"properties":{"extraInfo":{"position":0,"type":"string"},"priority":{"position":0,"type":"string"}}},"ParameterJson":{"id":"ParameterJson","name":"ParameterJson","qualifiedType":"com.geeksville.dapi.ParameterJson","required":["id","value","doc","rangeOk"],"properties":{"id":{"position":0,"type":"string"},"range":{"position":0,"type":"array","items":{"$ref":"Object"}},"value":{"position":1,"type":"string"},"doc":{"position":2,"type":"string"},"rangeOk":{"position":3,"type":"boolean"}}},"Object":{"id":"Object","name":"Object","qualifiedType":"java.lang.Object","required":[],"properties":{}},"AtmosphereClient":{"id":"AtmosphereClient","name":"AtmosphereClient","qualifiedType":"org.scalatra.atmosphere.AtmosphereClient","required":[],"properties":{}},"JObject":{"id":"JObject","name":"JObject","qualifiedType":"org.json4s.JsonAST$JObject","required":["obj"],"properties":{"obj":{"position":0,"type":"array","items":{"$ref":"Tuple2[String, JValue]"}}}},"Tuple2[String, JValue]":{"id":"Tuple2[String, JValue]","name":"Tuple2[String, JValue]","qualifiedType":"scala.Tuple2[java.lang.String, org.json4s.JsonAST$JValue]","required":["_1","_2"],"properties":{"_1":{"position":0,"$ref":"Object"},"_2":{"position":1,"$ref":"Object"}}},"JValue":{"id":"JValue","name":"JValue","qualifiedType":"org.json4s.JsonAST$JValue","required":[],"properties":{}}},"basePath":"http://127.0.0.1:8080"}