{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Audiosear.ch API",
    "description": "The Audiosear.ch API requires OAuth, which you can manage at <a href='/oauth/applications'>OAuth Applications</a>. To test the API on this page, please sign in <a href='/users/sign_up'>here</a>",
    "termsOfService": "https://www.auidosear.ch/terms_of_use",
    "contact": {
      "name": "Audiosear.ch",
      "email": "info@audiosear.ch"
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "shows",
      "description": "Available podcast series"
    },
    {
      "name": "episodes",
      "description": "Individual podcast episodes"
    },
    {
      "name": "episode search",
      "description": "Search individual podcasts"
    },
    {
      "name": "show search",
      "description": "Search podcast series"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/shows/{id}": {
      "get": {
        "tags": [
          "shows"
        ],
        "description": "This endpoint will return the medatdata for a single show.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of show to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "collection id response",
            "schema": {
              "$ref": "#/definitions/shows"
            }
          }
        }
      }
    },
    "/episodes/{id}": {
      "get": {
        "tags": [
          "episodes"
        ],
        "description": "This endpoint adds an audio file to a given item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an individual episode",
            "schema": {
              "$ref": "#/definitions/episode"
            }
          }
        }
      }  
    },
    "/search/shows/{query}": {
      "get": {
        "tags": [
          "shows",
          "show search"
        ],
        "description": "This endpoint returns search results for Shows",
        "produces": [
          "application/json"
        ],  
        "parameters": [
          {   
            "name": "query",
            "in": "path",
            "type": "string",
            "description": "Thing you would like to search for",
            "required": true
          },
          {
            "name": "filters[network]",
            "in": "query",
            "type": "string",
            "description": "Limit a search by any field value. This example uses <b>network</b> but any field name could be used. E.g. <b>filters[network]=NPR</b> or <b>filters[categories]=Talk%20Show</b>.",
            "required": false
          },
          {
            "name": "sort_by",
            "in"  : "query",
            "type": "string",
            "description":"Sort results by any field value. The default is by the relevancy score (<b>_score</b>). Must be paired with <b>sort_order</b>.",
            "required":false
          },
          {
            "name":"sort_order",
            "in"  :"query",
            "type":"string",
            "description":"Sort direction. Must be either <b>asc</b> or <b>desc</b>. Must be paired with <b>sort_by</b>.",
            "required":false
          },
          {
            "name":"s",
            "in"  :"query",
            "type":"string",
            "description":"Shortcut for specifying sort_by and sort_order in a single value. E.g. <b>date_created desc</b>.",
            "required":false
          },
          {
            "name":"size",
            "in"  :"query",
            "type":"string",
            "description":"The number of results in a single page. Default is <b>10</b>. If present, must be paired with <b>from</b>.",
            "required":false
          },
          {
            "name":"from",
            "in"  :"query",
            "type":"string",
            "description":"Offset when doing manual pagination. Must be paired with <b>size</b>.",
            "required":false
          },
          {
            "name":"page",
            "in"  :"query",
            "type":"string",
            "description":"The page number of results. Default is <b>1</b>.",
            "required":false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns search results",
            "schema": {
              "$ref": "#/definitions/show_search_result"
            }
          }
        }
      }
    },
    "/search/episodes/{query}": {
      "get": {
        "tags": [
          "episodes",
          "episode search"
        ],
        "description": "This endpoint returns search results",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "type": "string",
            "description": "Thing you would like to search for",
            "required": true
          },
          {
            "name": "filters[network]",
            "in": "query",
            "type": "string",
            "description": "Limit a search by any field value. This example uses <b>network</b> but any field name could be used. E.g. <b>filters[physical_location]=popuparchive</b> or <b>filters[network]=NPR</b> or <b>filters[categories]=Talk%20Show</b>.",
            "required": false
          },
          {
            "name": "sort_by",
            "in"  : "query",
            "type": "string",
            "description":"Sort results by any field value. The default is by the relevancy score (<b>_score</b>). Must be paired with <b>sort_order</b>.",
            "required":false
          },
          {
            "name":"sort_order",
            "in"  :"query",
            "type":"string",
            "description":"Sort direction. Must be either <b>asc</b> or <b>desc</b>. Must be paired with <b>sort_by</b>.",
            "required":false
          },
          {
            "name":"s",
            "in"  :"query",
            "type":"string",
            "description":"Shortcut for specifying sort_by and sort_order in a single value. E.g. <b>date_created desc</b>.",
            "required":false
          },
          {
            "name":"size",
            "in"  :"query",
            "type":"string",
            "description":"The number of results in a single page. Default is <b>10</b>. If present, must be paired with <b>from</b>.",
            "required":false
          },
          {
            "name":"from",
            "in"  :"query",
            "type":"string",
            "description":"Offset when doing manual pagination. Must be paired with <b>size</b>.",
            "required":false
          },
          {
            "name":"page",
            "in"  :"query",
            "type":"string",
            "description":"The page number of results. Default is <b>1</b>.",
            "required":false
          },
          {
            "name": "related",
            "in": "query",
            "type": "integer",
            "description": "Set to 1 to include an array of related episodes for each search result",
            "required":false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns search results",
            "schema": {
              "$ref": "#/definitions/search_result"
            }
          }
        }
      }  
    },
    "/episodes/{id}/related": {
      "get": {
        "tags": [
          "episodes"
        ],
        "description": "Returns episodes related to a given episode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of episode for which to get related episodes",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of episodes to be returned. Must be paired with <b>from</b>.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Offset of result from which to start (zero-based). Must be paired with <b>size</b>.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of episodes",
            "schema": {
              "$ref": "#/definitions/search_result"
            }
          }
        }
      }
    },
    "/trending": {
      "get": {
        "tags": [
          "episodes"
        ],
        "description": "Returns episodes related to trending terms from Twitter",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of episodes",
            "schema": {
              "$ref": "#/definitions/trending"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "shows": {
      "required": [
        "id",
        "title"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "unique identifier for the show"
        },
        "title": {
          "type": "string",
          "description": "title of the show"
        },
        "description": {
          "type": "string",
          "description": "description of the show"
        },
        "number_of_episodes": {
          "type": "integer",
          "description": "Number of episodes available for this show"
        },
        "image_files": {
          "type": "array",
          "xml": {
            "name": "image_file",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "image_file"
          }
        },
        "sc_feed": {
          "type": "string",
          "description": "SoundCloud URL"
        },
        "web_profiles": {
          "type": "array",
          "xml": {
            "name": "web_profile",
            "wrapped": "true"
          },  
          "items": {
            "type": "object",
            "$ref": "web_profile"
          }   
        },
        "episode_ids": {
          "type": "array",
          "xml": {
            "name": "episode_id",
            "wrapped": "true"
          },
          "items": {
            "type": "integer"
          }
        },
        "urls": {
          "type": "object",
          "description": "Relative URL to api endpoint",
          "items": {
            "type": "string",
            "name": "self"
          }
        },
        "recent_episodes": {
          "type": "array",
          "xml": {
            "name": "recent_episode",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "recent_episode"
          }
        }
      }
    },
    "show_search_result": {
      "required": [
        "id",
        "title"
      ],  
      "properties": {
        "id": {
          "type": "integer",
          "description": "unique identifier for the show"
        },  
        "title": {
          "type": "string",
          "description": "title of the show"
        },  
        "description": {
          "type": "string",
          "description": "description of the show"
        },  
        "image_files": {
          "type": "array",
          "xml": {
            "name": "image_file",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "image_file"
          }
        },
        "sc_feed": {
          "type": "string",
          "description": "SoundCloud URL"
        },  
        "web_profiles": {
          "type": "array",
          "xml": {
            "name": "web_profile",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "web_profile"
          }
        },
        "categories": {
          "type": "array",
          "xml": {
            "name": "category",
            "wrapped": "true"
          },
          "items": {
            "type": "string"
          }
        },
        "network": {
          "type":"string",
          "description": "Distribution network for show"
        }
      }
    },
    "all_shows": {
      "required": [
        "created_at",
        "id",
        "title",
        "updated_at"
      ],
      "properties": {
        "categories": {
          "type": "array",
          "xml": {
            "name": "category",
            "wrapped": "true"
          },
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "dateTime",
          "description": "Date and time the show was created"
        },
        "deleted_at": {
          "type": "dateTime",
          "description": "Date and time the show was deleted"
        },
        "description": {
          "type": "string",
          "description": "Show description"
        },
        "id": {
          "type": "integer",
          "description": "Unique identifier for the show"
        },
        "title": {
          "type": "string",
          "description": "Show title"
        },
        "updated_at": {
          "type": "dateTime",
          "description": "Date and time the show was last updated"
        },
        "extra": {
          "type": "object",
          "description": "additional information",
          "properties": {
            "sc_feed": {
              "type": "string",
              "description": "Link to SoundCloud user page"
            },
            "itunes_url": {
              "type": "string",
              "description": "Link to show on iTunes"
            }
          }
        }
      }
    },
    "episode": {
      "required": [
        "created_at",
        "id",
        "title",
        "updated_at"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the show"
        },
        "title": {
          "type": "string",
          "description": "Show title"
        },
        "description": {
          "type": "string",
          "description": "Show description"
        },
        "date_created": {
          "type": "dateTime",
          "description": "Date show originally aired"
        },
        "identifier": {
          "type": "string",
          "description": "URL for source audio file"
        },
        "show_id": {
          "type": "integer",
          "description": "ID of parent show"
        },
        "show_title": {
          "type": "string",
          "description": "Title of parent show"
        },
        "digital_location": {
          "type": "string",
          "description": "URL for episode page"
        },
        "physical_location": {
          "type": "string",
          "description": "Source of episode (e.g., SoundCloud, iTunes"
        },
        "duration": {
          "type": "integer",
          "description": "Length of audio file in seconds"
        },
        "tags": {
          "type": "array",
          "description": "Tags from source",
          "xml": {
            "name": "tag",
            "wrapped": "true"
          },
          "items": {
            "type": "string"
          }
        },
        "updated_at": {
          "type": "dateTime",
          "description": "Date and time item was last updated"
        },
        "date_added": {
          "type": "dateTime",
          "description": "Date and time episode was incorporated into Audiosear.ch"
        },
        "extra": {
          "type": "object",
          "description": "additional resource information"
        },
        "urls": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Relative path to item on Audiosear.ch"
            }
          }
        },
        "audio_files": {
          "type": "array",
          "xml": {
            "name": "audio_file",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "audio_file"
          }
        },
        "image_files": {
          "type": "array",
          "xml": {
            "name": "image_file",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "image_file"
          }
        },
        "entities": {
          "type": "array",
          "xml": {
            "name": "entity",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "entity"
          }
        }
      }
    },
    "search_result": {
      "required": [
        "id",
        "title",
        "date_created",
        "show_id",
        "show_title"
      ],
      "properties": { 
        "id": {
          "type": "integer",
          "description": "ID for the item"
        },
        "title": {
          "type": "string",
          "description": "Title for the item"
        },
        "description": {
          "type": "string",
          "description": "description of the audio file"
        },
        "date_created": {
          "type": "string",
          "description": "Created date for the item"
        },
        "identifier": {
          "type": "string",
          "description": "Link to external permanent url"
        },
        "show_id": {
          "type": "integer",
          "description": "Show ID that the returned item belongs to"
        },
        "show_title": {
          "type": "string",
          "description": "Show title associated with the returned item"
        },
        "digital_location": {
          "type": "string",
          "description": "External item page of source material"
        },
        "physical_location": {
          "type": "string",
          "description": "Episode import source"
        },
        "network": {
          "type":"string",
          "description":"The Show network"
        },
        "categories": {
          "items": {
            "type":"string",
            "description":"Individual category"
          },
          "type":"array",
          "description":"Array of Show categories"
        },
        "duration": {
          "type": "integer",
          "description": "Length of audio file"
        },
        "tags": {
          "items": {
            "type": "string",
            "description": "individual tag"
          },
          "type": "array",
          "description": "Array of tags associated with an item"
        },
        "updated_at": {
          "type": "integer",
          "description": "Date and time the show was last updated"
        },
        "image_files": {
          "type": "array",
          "xml": {
            "name": "image_file",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "image_file"
          }
        },
        "audio_files": {
          "items": {
            "$ref": "audio_file"
          },
          "type": "array",
          "description": "Array of audio files attributes"
        },
        "entities": {
          "items": {
            "$ref": "entity"
          },
          "type": "array",
          "description": "Array of entites related to the item"
        },
        "highlights": {
          "items": {
            "$ref": "highlights"
          },
          "type": "array"
        }
      }
    },
    "audio_file": {
      "required": [
        "id",
        "filename",
        "duration",
        "current_status",
        "url"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the show's audio file"
        },
        "filename": {
          "type": "string",
          "description": "Audio file name"
        },
        "duration": {
          "type": "integer",
          "description": "Length of audio file"
        },
        "current_status": {
          "type": "string",
          "description": "Status of audio file processing in Audiosear.ch"
        },
        "url": {
          "type": "array",
          "description": "Absolute paths to audio files",
          "xml": {
            "name": "url",
            "wrapped": "true"
          },
          "items": {
            "type": "string"
          }
        }
      }
    },
    "image_file": {
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "object",
          "description": "Absolute paths to image files",
          "xml": {
            "name": "url",
            "wrapped": "true"
          },
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity": {
      "required": [
        "id",
        "score",
        "category"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the entity"
        },
        "name": {
          "type": "string",
          "description": "Name of the entity"
        },
        "identifier": {
          "type": "string",
          "description": "OpenCalais link"
        },
        "score": {
          "type": "integer",
          "description": "Entity confidence"
        },
        "type": {
          "type": "string",
          "description": "Entity type"
        },
        "category": {
          "type": "string",
          "description": "Entity category"
        },
        "extra": {
          "type": "object",
          "description": "Additional information about the entity",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "recent_episode": {
      "required": [
        "item_name",
        "item_id",
        "file_status"
      ],
      "properties": {
        "file_name": {
          "type": "string",
          "description": "Audio file name"
        },
        "item_name": {
          "type": "string",
          "description": "Episode name"
        },
        "item_id": {
          "type": "integer",
          "description": "Episode unique id"
        },
        "file_status": {
          "type": "string",
          "description": "Episode processing status"
        }
      }
    },
    "highlights": {
      "required": [
        "url",
        "id",
        "transcript"
      ],
      "properties": {
        "url": {
          "type": "string",
          "description": "File url"
        },
        "id": {
          "type": "integer",
          "description": "Audio file id"
        },
        "transcript": {
          "type": "array",
          "xml": {
            "name": "highlight",
            "wrapped": "true"
          },
          "items": {
            "type": "object",
            "$ref": "highlight_transcript"
          }
        }
      }
    },
    "highlight_transcript": {
      "required": [
        "text",
        "start_time",
        "end_time"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Highlight text"
        },
        "start_time": {
          "type": "string",
          "description": "Start time of highlight"
        },
        "end_time": {
          "type": "string",
          "description": "End time of highlight"
        }
      }
    },
    "trending": {
      "required": [
        "trend",
        "twitter_url"
      ],
      "properties": {
        "trend": {
          "type": "string",
          "description": "Name of trend"
        },
        "twitter_url": {
          "type": "string",
          "description": "Link to Twitter search results for the trend"
        },
        "related_episodes": {
          "type": "array",
          "$ref": "search_result"
        }
      }
    }
  }
}
