{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "resourcePath": "",
  "apis": [
    {
      "path": "/cameras/test",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Tests if given camera parameters are correct",
          "nickname": "POST-cameras-test---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "form",
              "name": "external_url",
              "description": "External camera url.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "jpg_url",
              "description": "Snapshot url.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "cam_username",
              "description": "Camera username.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "cam_password",
              "description": "Camera password.",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns all data for a given camera",
          "nickname": "GET-cameras--id---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "thumbnail",
              "description": "Set to true to get base64 encoded 150x150 thumbnail with camera view or null if it's not available.",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Camera"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Updates full or partial data for an existing camera",
          "nickname": "PATCH-cameras--id---format-",
          "httpMethod": "PATCH",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "Camera name.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "vendor",
              "description": "Camera vendor id.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "model",
              "description": "Camera model name.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "timezone",
              "description": "Camera timezone.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "is_public",
              "description": "Is camera public?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "is_online",
              "description": "Is camera online? (If you leave it empty it will be automatically checked)",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "discoverable",
              "description": "Is camera discoverable in our piblic cameras page?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "cam_username",
              "description": "Camera username.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "cam_password",
              "description": "Camera password.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "mac_address",
              "description": "Camera MAC address.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "location_lat",
              "description": "Camera GPS latitude location.",
              "type": "Float",
              "dataType": "Float",
              "required": false
            },
            {
              "paramType": "form",
              "name": "location_lng",
              "description": "Camera GPS longitude location.",
              "type": "Float",
              "dataType": "Float",
              "required": false
            },
            {
              "paramType": "form",
              "name": "external_host",
              "description": "External camera host.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "internal_host",
              "description": "Internal camera host.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "external_http_port",
              "description": "External camera http port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "internal_http_port",
              "description": "Internal camera http port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "external_rtsp_port",
              "description": "External camera rtsp port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "internal_rtsp_port",
              "description": "Internal camera rtsp port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "jpg_url",
              "description": "Snapshot url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "mjpg_url",
              "description": "Mjpg url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "mpeg_url",
              "description": "MPEG url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "audio_url",
              "description": "Audio url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "h264_url",
              "description": "H264 url.",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Camera"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Deletes a camera from Evercam along with any stored media",
          "nickname": "DELETE-cameras--id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Camera"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Transfers the ownership of a camera from one user to another",
          "nickname": "PUT-cameras--id---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier for the camera.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "The Evercam user name or email address for the new camera owner.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "Evercam::Presenters::Camera"
        }
      ]
    },
    {
      "path": "/cameras",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns data for a specified set of cameras.",
          "nickname": "GET-cameras---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "query",
              "name": "ids",
              "description": "Comma separated list of camera identifiers for the cameras being queried.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "user_id",
              "description": "The Evercam user name or email address for the new camera owner.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "exclude_shared",
              "description": "Set to true to exclude cameras shared with the user in the fetch.",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "query",
              "name": "thumbnail",
              "description": "Set to true to get base64 encoded 150x150 thumbnail with camera view for each camera or null if it's not available.",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Camera"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Creates a new camera owned by the authenticating user",
          "nickname": "POST-cameras---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "form",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "Camera name.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "vendor",
              "description": "Camera vendor id.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "model",
              "description": "Camera model name.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "timezone",
              "description": "Camera timezone.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "is_public",
              "description": "Is camera public?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": true
            },
            {
              "paramType": "form",
              "name": "is_online",
              "description": "Is camera online? (If you leave it empty it will be automatically checked)",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "discoverable",
              "description": "Is camera discoverable in our piblic cameras page?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "cam_username",
              "description": "Camera username.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "cam_password",
              "description": "Camera password.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "mac_address",
              "description": "Camera MAC address.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "location_lat",
              "description": "Camera GPS latitude location.",
              "type": "Float",
              "dataType": "Float",
              "required": false
            },
            {
              "paramType": "form",
              "name": "location_lng",
              "description": "Camera GPS longitude location.",
              "type": "Float",
              "dataType": "Float",
              "required": false
            },
            {
              "paramType": "form",
              "name": "external_host",
              "description": "External camera host.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "internal_host",
              "description": "Internal camera host.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "external_http_port",
              "description": "External camera http port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "internal_http_port",
              "description": "Internal camera http port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "external_rtsp_port",
              "description": "External camera rtsp port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "internal_rtsp_port",
              "description": "Internal camera rtsp port.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "jpg_url",
              "description": "Snapshot url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "mjpg_url",
              "description": "Mjpg url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "mpeg_url",
              "description": "MPEG url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "audio_url",
              "description": "Audio url.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "h264_url",
              "description": "H264 url.",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Camera"
        }
      ]
    },
    {
      "path": "/cameras/{id}/recordings/snapshots",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns the list of all snapshots currently stored for this camera",
          "nickname": "GET-cameras--id-recordings-snapshots---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Unique identifier for the camera",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "from",
              "description": "From Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "to",
              "description": "To Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "The maximum number of cameras to retrieve. Defaults to 100, cannot be more than 10000.",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Page number, starting from 0",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Fetches a snapshot from the camera and stores it using the current timestamp",
          "nickname": "POST-cameras--id-recordings-snapshots---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "notes",
              "description": "Optional text note for this snapshot",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "with_data",
              "description": "Should it return image data?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/recordings/snapshots/latest",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns latest snapshot stored for this camera",
          "nickname": "GET-cameras--id-recordings-snapshots-latest---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "with_data",
              "description": "Should it send image data?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Snapshot"
        }
      ]
    },
    {
      "path": "/cameras/{id}/recordings/snapshots/{year}/{month}/days",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns list of specific days in a given month which contains any snapshots",
          "nickname": "GET-cameras--id-recordings-snapshots--year--month-days---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "year",
              "description": "Year, for example 2013",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "month",
              "description": "Month, for example 11",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}/hours",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns list of specific hours in a given day which contains any snapshots",
          "nickname": "GET-cameras--id-recordings-snapshots--year--month--day-hours---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "year",
              "description": "Year, for example 2013",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "month",
              "description": "Month, for example 11",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "day",
              "description": "Day, for example 17",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/recordings/snapshots/{timestamp}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns the snapshot stored for this camera closest to the given timestamp",
          "nickname": "GET-cameras--id-recordings-snapshots--timestamp---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "timestamp",
              "description": "Snapshot Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "with_data",
              "description": "Should it send image data?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "query",
              "name": "range",
              "description": "Time range in seconds around specified timestamp. Default range is one second (so it matches only exact timestamp).",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::Snapshot"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Stores the supplied snapshot image data for the given timestamp",
          "nickname": "POST-cameras--id-recordings-snapshots--timestamp---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "timestamp",
              "description": "Snapshot Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "data",
              "description": "Image file.",
              "type": "File",
              "dataType": "File",
              "required": true
            },
            {
              "paramType": "form",
              "name": "notes",
              "description": "Optional text note for this snapshot",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "with_data",
              "description": "Should it return image data?",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Deletes any snapshot for this camera which exactly matches the timestamp",
          "nickname": "DELETE-cameras--id-recordings-snapshots--timestamp---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "timestamp",
              "description": "Snapshot Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/live/snapshot",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns jpg from the camera",
          "nickname": "GET-cameras--id-live-snapshot---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Camera Id.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/shares",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get the list of shares for a specified camera",
          "nickname": "GET-cameras--id-shares---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier for the camera.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "user_id",
              "description": "The unique identifier for the user the camera is shared with.",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::CameraShare"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Create a new camera share",
          "nickname": "POST-cameras--id-shares---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier for a camera.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "email",
              "description": "Email address or user name of the user to share the camera with.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "rights",
              "description": "A comma separate list of the rights to be granted with the share.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "message",
              "description": "Not currently used.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "String",
              "description": "Not currently used.",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "notify",
              "description": "Not currently used.",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "grantor",
              "description": "The user name of the user who is creating the share.",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::CameraShare"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Delete an existing camera share",
          "nickname": "DELETE-cameras--id-shares---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier for a camera.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "email",
              "description": "The email address of user the camera was shared with.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update an existing camera share.",
          "nickname": "PATCH-cameras--id-shares---format-",
          "httpMethod": "PATCH",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier of the camera share to be updated.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "email",
              "description": "The email address of user the camera was shared with.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "rights",
              "description": "A comma separate list of the rights to be set on the share.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/shares/requests",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Fetch the list of share requests currently outstanding for a given camera.",
          "nickname": "GET-cameras--id-shares-requests---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier of the camera to fetch share requests for.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "status",
              "description": "The request status to fetch, either 'PENDING', 'USED' or 'CANCELLED'.",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "Evercam::Presenters::CameraShareRequest"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Cancels a pending camera share request for a given camera",
          "nickname": "DELETE-cameras--id-shares-requests---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier of the camera to fetch share requests for.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "email",
              "description": "The email address of user the camera was shared with.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "Evercam::Presenters::CameraShareRequest"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Updates a pending camera share request.",
          "nickname": "PATCH-cameras--id-shares-requests---format-",
          "httpMethod": "PATCH",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "The unique identifier of the camera share request to update.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "rights",
              "description": "The new set of rights to be granted for the share.",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "email",
              "description": "The email address of user the camera was shared with.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "Evercam::Presenters::CameraShareRequest"
        }
      ]
    },
    {
      "path": "/cameras/{id}/logs",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns list of logs for given camera",
          "nickname": "GET-cameras--id-logs---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Unique identifier for the camera",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "from",
              "description": "From Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "to",
              "description": "To Unix timestamp.",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Number of results per page. Defaults to 50.",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "Page number, starting from 0",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "types",
              "description": "Comma separated list of log types: created, accessed, edited, viewed, captured",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "objects",
              "description": "Return objects instead of strings",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "path": "/cameras/{id}/webhooks",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns list of webhooks for a given camera",
          "nickname": "GET-cameras--id-webhooks---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Unique identifier for the camera",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "webhook_id",
              "description": "Unique identifier for the webhook",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Create a new webhook",
          "nickname": "POST-cameras--id-webhooks---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Unique identifier for the camera",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "Unique identifier for the user",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "url",
              "description": "Webhook URL.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "Evercam::Presenters::Webhook"
        }
      ]
    },
    {
      "path": "/cameras/{id}/webhooks/{webhook_id}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Updates webhook URL",
          "nickname": "PATCH-cameras--id-webhooks--webhook_id---format-",
          "httpMethod": "PATCH",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Unique identifier for the camera",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "webhook_id",
              "description": "Unique identifier for the webhook",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "url",
              "description": "Webhook URL.",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "Evercam::Presenters::Webhook"
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Deletes specified webhook",
          "nickname": "DELETE-cameras--id-webhooks--webhook_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "Unique identifier for the camera",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "path",
              "name": "webhook_id",
              "description": "Unique identifier for the webhook",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "Evercam::Presenters::Webhook"
        }
      ]
    }
  ],
  "basePath": "https://api.evercam.io/v1",
  "models": {
    "Evercam::Presenters::Camera": {
      "id": "Evercam::Presenters::Camera",
      "name": "Evercam::Presenters::Camera",
      "properties": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Unique Evercam identifier for the camera"
        },
        "name": {
          "type": "string",
          "required": true,
          "description": "Human readable or friendly name for the camera"
        },
        "owned": {
          "type": "Boolean",
          "description": "True if the user owns the camera, false otherwise"
        },
        "owner": {
          "type": "string",
          "required": true,
          "description": "Username of camera owner"
        },
        "vendor_id": {
          "type": "string",
          "description": "Unique identifier for the camera vendor"
        },
        "vendor_name": {
          "type": "string",
          "description": "The name for the camera vendor"
        },
        "model_id": {
          "type": "string",
          "description": "Unique identifier for the camera model"
        },
        "model_name": {
          "type": "string",
          "description": "Name of the camera model"
        },
        "created_at": {
          "type": "integer",
          "required": true,
          "description": "Unix timestamp at creation"
        },
        "updated_at": {
          "type": "integer",
          "required": true,
          "description": "Unix timestamp at last update"
        },
        "last_polled_at": {
          "type": "integer",
          "description": "Unix timestamp at last heartbeat poll"
        },
        "last_online_at": {
          "type": "integer",
          "description": "Unix timestamp of the last successful heartbeat of the camera"
        },
        "timezone": {
          "type": "string",
          "required": true,
          "description": "Name of the <a href=\"http://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">IANA/tz</a> timezone where this camera is located"
        },
        "is_online": {
          "type": "boolean",
          "description": "Whether or not this camera is currently online"
        },
        "is_public": {
          "type": "boolean",
          "required": true,
          "description": "Whether or not this camera is publically available"
        },
        "discoverable": {
          "type": "boolean",
          "description": "Whether the camera is publicly findable"
        },
        "cam_username": {
          "type": "String",
          "description": "Camera username"
        },
        "cam_password": {
          "type": "String",
          "description": "Camera password"
        },
        "mac_address": {
          "type": "string",
          "description": "The physical network MAC address of the camera"
        },
        "location": {
          "type": "hash",
          "description": "GPS lng and lat coordinates of the camera location"
        },
        "host": {
          "type": "String",
          "description": "Internal host of the camera"
        },
        "port": {
          "type": "Integer",
          "description": "Internal rtsp port of the camera"
        },
        "camera": {
          "type": "String",
          "description": "Internal camera url"
        },
        "jpg": {
          "type": "String",
          "description": "Short snapshot url using evr.cm url shortener and proxy"
        },
        "mjpg": {
          "type": "String",
          "description": "Mjpg url using evr.cm dynamic DNS"
        },
        "mpeg": {
          "type": "String",
          "description": "Dynamis DNS mpeg url"
        },
        "audio": {
          "type": "String",
          "description": "Dynamis DNS audio url"
        },
        "h264": {
          "type": "String",
          "description": "Dynamis DNS h264 url"
        },
        "rtmp": {
          "type": "String",
          "description": "RTMP url"
        },
        "rights": {
          "type": "String",
          "description": "A comma separated list of the users rights on the camera"
        },
        "thumbnail": {
          "type": "Image",
          "description": "150x150 preview of camera view"
        },
        "thumbnail_url": {
          "type": "String",
          "description": "Latest recorded snapshot url"
        }
      }
    },
    "Evercam::Presenters::Snapshot": {
      "id": "Evercam::Presenters::Snapshot",
      "name": "Evercam::Presenters::Snapshot",
      "properties": {
        "created_at": {
          "type": "integer",
          "required": false,
          "description": "Snapshot timestamp"
        },
        "notes": {
          "type": "string",
          "required": false,
          "description": "Note for snapshot"
        },
        "data": {
          "type": "file",
          "required": false,
          "description": "Image data"
        }
      }
    },
    "Evercam::Presenters::CameraShare": {
      "id": "Evercam::Presenters::CameraShare",
      "name": "Evercam::Presenters::CameraShare",
      "properties": {
        "id": {
          "type": "integer",
          "required": true,
          "description": "Unique identifier for a camera share."
        },
        "camera_id": {
          "type": "string",
          "required": true,
          "description": "Unique identifier of the shared camera."
        },
        "sharer_id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier of the user who shared the camera."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "Unique user id of the user the camera is shared with."
        },
        "kind": {
          "type": "string",
          "required": true,
          "description": "Either 'public' or 'private' depending on the share kind."
        },
        "rights": {
          "type": "string",
          "required": true,
          "description": "A comma separated list of the rights available on the share."
        }
      }
    },
    "Evercam::Presenters::CameraShareRequest": {
      "id": "Evercam::Presenters::CameraShareRequest",
      "name": "Evercam::Presenters::CameraShareRequest",
      "properties": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Unique identifier for a camera share request."
        },
        "camera_id": {
          "type": "string",
          "required": true,
          "description": "Unique identifier of the camera to be shared."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier of the user who shared the camera."
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "The email address of the user the camera is shared with."
        },
        "rights": {
          "type": "string",
          "required": true,
          "description": "A comma separated list of the rights to be granted on the share."
        }
      }
    },
    "Evercam::Presenters::Webhook": {
      "id": "Evercam::Presenters::Webhook",
      "name": "Evercam::Presenters::Webhook",
      "properties": {
        "id": {
          "type": "integer",
          "required": true,
          "description": "Unique identifier of the webhook."
        },
        "camera_id": {
          "type": "string",
          "required": true,
          "description": "Unique identifier of the camera."
        },
        "url": {
          "type": "string",
          "required": true,
          "description": "Url which will receive webhook data."
        }
      }
    }
  }
}